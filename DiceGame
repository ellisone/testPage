void setup()
{
  noLoop();
  size(700,700);
}
int totalTotal;
void draw()
{
  background(0);
  Die D1=new Die(5,5);
  Die D2=new Die(60,5);
  Die D3=new Die(115,5);
  Die D4=new Die(170,5);
  Die D5=new Die(225,5);
  Die D6=new Die(5,60);
  Die D7=new Die(60,60);
  Die D8=new Die(115,60);
  Die D9=new Die(170,60);
  Die D10=new Die(225,60);
  Die D11=new Die(5,115);
  Die D12=new Die(60,115);
  Die D13=new Die(115,115);
  Die D14=new Die(170,115);
  Die D15=new Die(225,115);
  Die D16=new Die(5,170);
  Die D17=new Die(60,170);
  Die D18=new Die(115,170);
  Die D19=new Die(170,170);
  Die D20=new Die(225,170);
  Die D21=new Die(5,225);
  Die D22=new Die(60,225);
  Die D23=new Die(115,225);
  Die D24=new Die(170,225);
  Die D25=new Die(225,225);
  D1.show();
  D2.show();
  D3.show();
  D4.show();
  D5.show();
  D6.show();
  D7.show();
  D8.show();
  D9.show();
  D10.show();
  D11.show();
  D12.show();
  D13.show();
  D14.show();
  D15.show();
  D16.show();
  D17.show();
  D18.show();
  D19.show();
  D20.show();
  D21.show();
  D22.show();
  D23.show();
  D24.show();
  D25.show();
  int total=D1.getRoll()+D2.getRoll()+D3.getRoll()+D4.getRoll()+D5.getRoll()+D6.getRoll()+D7.getRoll()+D8.getRoll()+D9.getRoll()+D10.getRoll()+D11.getRoll()+D12.getRoll()+D13.getRoll()+D14.getRoll()+D15.getRoll()+D16.getRoll()+D17.getRoll()+D18.getRoll()+D19.getRoll()+D20.getRoll()+D21.getRoll()+D22.getRoll()+D23.getRoll()+D24.getRoll()+D25.getRoll();
  //if(total>=90){
    //total=117;
  //}
  totalTotal=totalTotal+total;
  fill(255);
  textSize(27);
  text("Total: "+total,280,40);
  text("Total of Totals: "+totalTotal,420,40);
  String binaryTotal="";
  int NewT=total;
  
  if(NewT>=128){
    NewT=NewT%128;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=64){
    NewT=NewT%64;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=32){
    NewT=NewT%32;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=16){
    NewT=NewT%16;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=8){
    NewT=NewT%8;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=4){
    NewT=NewT%4;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=2){
    NewT=NewT%2;
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  if(NewT>=1){
    binaryTotal=binaryTotal+"1";
  }else{
    binaryTotal=binaryTotal+"0";
  }
  text("Total in binary: "+binaryTotal,280,70);
  
  
  
  boolean prime=true;
  for(int i=2;i<total-1;i++){
    if(total%i==0){
      prime=false;
    }
  }
  textSize(27);
  if(prime==true){
    text("The total is a prime number",280,100);
  }
  if(prime==false){
    text("The total is not a prime number",280,100);
  }
  if(total==117||totalTotal==117){
    PImage MasterChef = loadImage("Master Chef.jpg");
    image(MasterChef, 300,110,400,250);
  }
  
}
void mousePressed()
{
  redraw();
}
class Die //models one single dice cube
{
  int x=0;
  int y=0;
  int num=0;
  Die(int place1, int place2) //constructor
  {
    x=place1;
    y=place2;
  }
  void roll()
  {
    num=(int)((Math.random()*6)+1);
  }
  int getRoll(){
    return num;
  }
  void show()
  {
    noStroke();
    fill(0);
    int CD=(int)((Math.random()*3)+1);
    if(CD==1){
      fill(255,0,0);
    }else if(CD==2){
      fill(0,255,0);
    }else{
      fill(0,0,255);
    }
    rect(x,y,50,50,7);
    roll();
    if(CD==1){
      fill(0,255,0);
    }else if(CD==2){
      fill(0,0,255);
    }else{
      fill(255,0,0);
    }
    if(num==1||num==3||num==5){
      ellipse(x+25,y+25,10,10);
    }
    if(num==2||num==3||num==4||num==5){
      ellipse(x+12,y+12,10,10);
      ellipse(x+38,y+38,10,10);
    }
    if(num==4||num==5){
      ellipse(x+12,y+38,10,10);
      ellipse(x+38,y+12,10,10);
    }
    if(num==6){
      ellipse(x+15,y+10,10,10);
      ellipse(x+15,y+25,10,10);
      ellipse(x+15,y+40,10,10);
      ellipse(x+35,y+10,10,10);
      ellipse(x+35,y+25,10,10);
      ellipse(x+35,y+40,10,10);
    }
    
  }
}
